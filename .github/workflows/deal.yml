name: Deal Build

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: dashavav/deal

on:
  workflow_dispatch:
  pull_request:
    paths:
      - .github/workflows/deal.yml

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    permissions:
      packages: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3.4.2

      - name: Make Gradle Wrapper executable
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Test Coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
#      - name: Analyze with SonarCloud
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: ./gradlew check sonar:sonar \
#          -Dsonar.projectKey=dashaVav_deal \
#          -Dsonar.organization=dashavav \
#          -Dsonar.host.url=https://sonarcloud.io \
#          -Dsonar.login=$SONAR_TOKEN \
#          -Dsonar.coverage.jacoco.xmlReportPaths=./build/reports/jacoco/test/jacocoTestReport.xml
      - name: Docker image build
        run: docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} -f ${{ github.workspace }}/deal.Dockerfile ${{ github.workspace }}

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Docker image push
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}